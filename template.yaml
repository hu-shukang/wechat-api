AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  wechat-api

  Sample SAM Template for wechat-api

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 100
    Runtime: nodejs14.x
    MemorySize: 128
    Handler: index.handler
    Layers:
      - !Ref APISharedLayer

Resources:
  UserTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: WeChatAPI-UserTable
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
        - AttributeName: name
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      GlobalSecondaryIndexes:
        - IndexName: name_index
          KeySchema:
            - AttributeName: name
              KeyType: HASH
          Projection:
            ProjectionType: KEYS_ONLY
          ProvisionedThroughput:
            ReadCapacityUnits: 5
            WriteCapacityUnits: 5
  APISharedLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: WeChatAPI-APISharedLayer
      Description: 'WeChatAPI-APISharedLayer'
      ContentUri: src/layer/APISharedLayer
      CompatibleRuntimes:
        - nodejs14.x
      RetentionPolicy: Retain
  # TokenAuthorizerFunction:
  #   Type: AWS::Serverless::Function
  #   Properties:
  #     FunctionName: WeChatAPI-TokenAuthorizerFunction
  #     CodeUri: src/function/authorizer/token
  #     Policies:
  #       - arn:aws:iam::aws:policy/AmazonSSMFullAccess
  WeChatApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Dev
      # Auth:
      #   DefaultAuthorizer: TokenAuthorizer
      #   Authorizers:
      #     TokenAuthorizer:
      #       FunctionArn: !GetAtt TokenAuthorizerFunction.Arn
      #       Identity:
      #         ReauthorizeEvery: 0
  WeChatWebSocket:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      Name: WeChatAPI-WebSocket
      ProtocolType: WEBSOCKET
      RouteSelectionExpression: '$request.body.action'
  ConnectRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref WeChatWebSocket
      RouteKey: $connect
      AuthorizationType: NONE
      OperationName: ConnectRoute
      Target: !Join
        - '/'
        - - 'integrations'
          - !Ref ConnectInteg
  ConnectInteg:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref WeChatWebSocket
      Description: Connect Integration
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ChatConnectFunction.Arn}/invocations
  DisconnectRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref WeChatWebSocket
      RouteKey: $disconnect
      AuthorizationType: NONE
      OperationName: DisconnectRoute
      Target: !Join
        - '/'
        - - 'integrations'
          - !Ref DisconnectInteg
  DisconnectInteg:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref WeChatWebSocket
      Description: Disconnect Integration
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ChatDisconnectFunction.Arn}/invocations
  SendRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref WeChatWebSocket
      RouteKey: sendmessage
      AuthorizationType: NONE
      OperationName: SendRoute
      Target: !Join
        - '/'
        - - 'integrations'
          - !Ref SendInteg
  SendInteg:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref WeChatWebSocket
      Description: Send Integration
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ChatSendMessageFunction.Arn}/invocations
  UserRegisterFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: WeChatAPI-UserRegisterFunction
      CodeUri: src/function/user/register
      Description: 'user register function'
      Policies:
        - arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess
      Events:
        api:
          Type: Api
          Properties:
            Path: /user/register
            Method: post
            RestApiId: !Ref WeChatApi
  ChatConnectFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: WeChatAPI-ChatConnectFunction
      CodeUri: src/function/chat/connect
      Description: 'chat connect function'
      Policies:
        - arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess
  ChatDisconnectFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: WeChatAPI-ChatDisconnectFunction
      CodeUri: src/function/chat/disconnect
      Description: 'chat disconnect function'
      Policies:
        - arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess
  ChatSendMessageFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: WeChatAPI-ChatSendMessageFunction
      CodeUri: src/function/chat/send-message
      Description: 'chat send message function'
      Policies:
        - arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess
  ChatConnectPermission:
    Type: AWS::Lambda::Permission
    DependsOn:
      - WeChatWebSocket
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref ChatConnectFunction
      Principal: apigateway.amazonaws.com
  ChatDisconnectPermission:
    Type: AWS::Lambda::Permission
    DependsOn:
      - WeChatWebSocket
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref ChatDisconnectFunction
      Principal: apigateway.amazonaws.com
  ChatSendMessagePermission:
    Type: AWS::Lambda::Permission
    DependsOn:
      - WeChatWebSocket
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref ChatSendMessageFunction
      Principal: apigateway.amazonaws.com
  Deployment:
    Type: AWS::ApiGatewayV2::Deployment
    DependsOn:
      - ConnectRoute
      - SendRoute
      - DisconnectRoute
    Properties:
      ApiId: !Ref WeChatWebSocket
  Stage:
    Type: AWS::ApiGatewayV2::Stage
    Properties:
      StageName: Dev
      Description: Dev Stage
      DeploymentId: !Ref Deployment
      ApiId: !Ref WeChatWebSocket
